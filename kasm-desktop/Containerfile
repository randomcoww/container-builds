# References
# https://github.com/linuxserver/docker-baseimage-kasmvnc/blob/fedora38/Dockerfile
# https://github.com/linuxserver/docker-baseimage-fedora/blob/master/Dockerfile
# https://github.com/linuxserver/docker-webtop/blob/fedora-xfce/Dockerfile
# https://github.com/kasmtech/workspaces-core-images/blob/develop/dockerfile-kasm-core-fedora

# ARG CUDA_VERSION=12.3.1-runtime-ubi9
ARG CUDA_VERSION=11.8.0-cudnn8-runtime-ubi8

FROM localhost/buildstage:latest AS buildstage
FROM localhost/rootfs-stage:latest AS rootfs-stage

# FROM scratch AS BASE
FROM nvcr.io/nvidia/cuda:$CUDA_VERSION
ARG CODE_VERSION=4.18.0
ARG SUNSHINE_VERSION=0.21.0
ARG HELM_VERSION=3.13.1
ARG HEROIC_VERSION=2.11.0
ARG ARCH=amd64

COPY --from=rootfs-stage /root-out/ /
COPY --from=buildstage /build-out/ /
COPY custom.repo /etc/yum.repos.d/

RUN set -x \
  \
  && echo 'exclude=*.i386 *.i686' >> /etc/dnf.conf \
  && rpm --setcaps shadow-utils 2>/dev/null \
  && dnf install -y \
    https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
    https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm \
  && dnf install -y --setopt=install_weak_deps=False --best \
    ca-certificates \
    coreutils \
    curl \
    findutils \
    hostname \
    netcat \
    procps-ng \
    pciutils-libs \
    shadow \
    git-core \
    iproute-tc \
    iptables-nft \
    gzip \
    tar \
    xz \
    unar \
    unzip \
    jq \
    which \
    lsof \
    ldns-utils \
    sudo \
    vim-minimal \
    less \
    mesa-dri-drivers \
    mesa-libgbm \
    mesa-libGL \
    mesa-libOpenCL \
    mesa-va-drivers-freeworld \
    mesa-vdpau-drivers-freeworld \
    mesa-vulkan-drivers \
    xorg-x11-drv-amdgpu \
    vulkan \
    vulkan-tools \
    intel-media-driver \
    libva-utils \
    pulseaudio \
    pulseaudio-utils \
    util-linux \
    dbus-x11 \
    xauth \
    xkbcomp \
    xkeyboard-config \
    ffmpeg \
    libjpeg-turbo \
    libwebp \
    libXdmcp \
    libXfont2 \
    libxshmfence \
    pixman \
    strace \
    unzip \
    kubectl \
    rsync \
    glibc-all-langpacks \
    bash-completion \
    glx-utils \
    VirtualGL \
    # vscode server
    https://github.com/coder/code-server/releases/download/v$CODE_VERSION/code-server-$CODE_VERSION-$ARCH.rpm \
    conda \
    \
    # podman
    podman \
    podman-plugins \
    containernetworking-plugins \
    netavark \
    aardvark-dns \
    crun \
    fuse-overlayfs \
    \
    # XFCE
    gtk-xfce-engine \
    Thunar \
    xfce4-appfinder \
    xfce4-datetime-plugin \
    xfce4-panel \
    xfce4-places-plugin \
    xfce4-pulseaudio-plugin \
    xfce4-session \
    xfce4-settings \
    xfce4-terminal \
    xfconf \
    xfdesktop \
    xfwm4 \
    # desktop applications
    https://github.com/LizardByte/Sunshine/releases/download/v$SUNSHINE_VERSION/sunshine-fedora-$(rpm -E %fedora)-$ARCH.rpm \
    brave-browser \
    steam \
    lutris \
    https://github.com/Heroic-Games-Launcher/HeroicGamesLauncher/releases/download/v$HEROIC_VERSION/heroic-$HEROIC_VERSION.$(arch).rpm \
  --exclude \
    container-selinux \
  \
  && dnf install -y --setopt=install_weak_deps=False --best --repo rpmfusion-nonfree-updates \
    nvidia-vaapi-driver \
  \
  && dnf autoremove -y \
  && dnf clean all \
  && rm -rf /var/cache /var/log/dnf* /var/log/yum.*

RUN set -x \
  \
  && curl -L -o helm.tar.gz https://get.helm.sh/helm-v$HELM_VERSION-linux-$ARCH.tar.gz \
  && tar xzf helm.tar.gz -C /usr/bin --strip-components=1 linux-$ARCH/helm \
  && rm helm.tar.gz \
  \
  && curl -L https://dl.min.io/client/mc/release/linux-$ARCH/mc -o /usr/local/bin/mc \
  && chmod +x /usr/local/bin/mc \
  \
  && ln -sf /usr/bin/python3 /usr/bin/python \
  && ln -sf /opt/conda/etc/profile.d/conda.sh /etc/profile.d \
  && echo '%wheel ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/wheel \
  && rm -f \
    /etc/xdg/autostart/xfce-polkit.desktop

COPY /root /

ENV \
  S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0 \
  S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \
  S6_VERBOSITY=1 \
  USER=kasm-user \
  UID=1000 \
  HOME=/home/kasm-user \
  LANG=C.UTF-8 \
  CODE_PORT=8080 \
  DISPLAY=:0 \
  XDG_RUNTIME_DIR=/run/user/1000 \
  RESOLUTION=1920x1080

ENTRYPOINT ["/init"]
CMD ["/entrypoint.sh"]