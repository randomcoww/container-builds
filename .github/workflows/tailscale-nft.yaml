name: tailscale-nft build
on:
  workflow_dispatch:
  schedule:
  - cron: "0 22 2 * *"
  push:
    paths:
    - "tailscale-nft/**"
    - "!tailscale-nft/README.md"
    branches:
    - master
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  TARGET: tailscale-nft
  VERSION: 1
  FF_KANIKO_SQUASH_STAGES: true # https://github.com/mzihlmann/kaniko/pull/141

jobs:
  build:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/martizih/kaniko:debug
    permissions:
      contents: read
    steps:
    - name: Set tag
      run: |
        set -e
        echo TAG=$(date -u +'%Y%m%d.%H%M') | tee -a "$GITHUB_ENV"

    - name: Build and release container
      run: |
        cat > $DOCKER_CONFIG/config.json <<EOF
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64 -w0)"
            }
          }
        }
        EOF
        echo -e "$INTERNAL_CA_CERT" > $DOCKER_CONFIG/internal.crt

        executor \
          --context-sub-path="$TARGET" \
          --dockerfile="./Containerfile" \
          --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
          --destination="$INTERNAL_REGISTRY/${{ github.actor }}/${{ env.TARGET }}:v$VERSION.$TAG" \
          --registry-certificate=$INTERNAL_REGISTRY=$DOCKER_CONFIG/internal.crt \
          --use-new-run \
          --skip-unused-stages \
          --snapshot-mode=redo \
          --cleanup \
          --image-download-retry=4 \
          --image-fs-extract-retry=4 \
          --push-retry=4
  cleanup:
    needs:
    - build
    env:
      TAGS_KEEP: 4
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/regclient/regctl:alpine
    steps:
    - name: Remove old tags
      run: |
        set -e
        tags=$(mktemp)
        repo=$INTERNAL_REGISTRY/${{ github.actor }}/${{ env.TARGET }}
        regctl registry set $INTERNAL_REGISTRY --cacert "$INTERNAL_CA_CERT"

        for tag in $(regctl tag ls $repo --exclude latest); do
          regctl image config $repo:$tag --format "{{ printf \"$tag|%d\\n\" .Created.Unix }}" >> $tags
        done
        for tag in $(sort -k2 -t "|" -n $tags | head -n -$TAGS_KEEP); do
          regctl tag delete --ignore-missing $repo:$(echo $tag | cut -d "|" -f 1)
        done