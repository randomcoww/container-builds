name: stork-agent build
on:
  workflow_dispatch:
  schedule:
  - cron: "0 22 2 * *"
  push:
    paths:
    - "stork-agent/**"
    - "!stork-agent/README.md"
    branches:
    - master
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  TARGET: stork-agent
  FF_KANIKO_SQUASH_STAGES: true # https://github.com/mzihlmann/kaniko/pull/141

jobs:
  build:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/martizih/kaniko:debug
    permissions:
      contents: read
      packages: write
    steps:
    - name: Set tag
      run: |
        set -e
        TARGETARCH=$(arch)
        TARGETARCH=${TARGETARCH/x86_64/amd64} && TARGETARCH=${TARGETARCH/aarch64/arm64}
        JQ_VERSION=$(wget -O - https://api.github.com/repos/jqlang/jq/releases/latest | grep tag_name | cut -d '"' -f 4 | tr -d 'v')
        wget -O /kaniko/jq https://github.com/jqlang/jq/releases/download/$JQ_VERSION/jq-linux-$TARGETARCH
        chmod +x /kaniko/jq

        echo VERSION=$(wget -O - https://api.github.com/repos/isc-projects/stork/git/refs/tags | jq -r 'last(.[] | select(.ref | startswith("refs/tags/v"))).ref' | sed 's/refs\/tags\///') | tee -a "$GITHUB_ENV"
        echo TAG=$(date -u +'%Y%m%d.%H%M') | tee -a "$GITHUB_ENV"

    - name: Build and release container
      run: |
        cat > $DOCKER_CONFIG/config.json <<EOF
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64 -w0)"
            }
          }
        }
        EOF
        echo -e "$INTERNAL_CA_CERT" > $DOCKER_CONFIG/internal.crt

        executor \
          --context-sub-path="$TARGET" \
          --dockerfile="./Containerfile" \
          --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
          --destination="ghcr.io/${{ github.actor }}/${{ env.TARGET }}:$VERSION.$TAG" \
          --registry-certificate=$INTERNAL_REGISTRY=$DOCKER_CONFIG/internal.crt \
          --use-new-run \
          --skip-unused-stages \
          --snapshot-mode=redo \
          --cleanup \
          --image-download-retry=4 \
          --image-fs-extract-retry=4 \
          --push-retry=4
  cleanup:
    needs:
    - build
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/node:current-alpine
    permissions:
      packages: write
    steps:
      - name: Remove old container images
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ env.TARGET }}
          package-type: container
          min-versions-to-keep: 4
          ignore-versions: latest
          token: ${{ secrets.GITHUB_TOKEN }}