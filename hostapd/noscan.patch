--- hostap/hostapd/config_file.c	2024-10-21 19:24:51.841801014 -0300
+++ hostap-patched/hostapd/config_file.c	2024-10-21 19:46:46.845166092 -0300
@@ -3116,6 +3116,8 @@ static int hostapd_config_fill(struct ho
 				   line, bss->wpa_deny_ptk0_rekey);
 			return 1;
 		}
+        } else if (os_strcmp(buf, "noscan") == 0) {
+            conf->noscan = atoi(pos);
 	} else if (os_strcmp(buf, "wpa_group_update_count") == 0) {
 		char *endp;
 		unsigned long val = strtoul(pos, &endp, 0);
@@ -3745,6 +3747,8 @@ static int hostapd_config_fill(struct ho
 		if (bss->ocv && !bss->ieee80211w)
 			bss->ieee80211w = 1;
 #endif /* CONFIG_OCV */
+        } else if (os_strcmp(buf, "noscan") == 0) {
+            conf->noscan = atoi(pos);
 	} else if (os_strcmp(buf, "ieee80211n") == 0) {
 		conf->ieee80211n = atoi(pos);
 	} else if (os_strcmp(buf, "ht_capab") == 0) {
--- hostap/src/ap/ap_config.h	2024-10-21 19:24:51.846801012 -0300
+++ hostap-patched/src/ap/ap_config.h	2024-10-21 20:01:28.491730959 -0300
@@ -1122,6 +1122,7 @@ struct hostapd_config {
 
 	int ht_op_mode_fixed;
 	u16 ht_capab;
+        int noscan;
 	int ieee80211n;
 	int secondary_channel;
 	int no_pri_sec_switch;
--- hostap/src/ap/hw_features.c	2024-10-21 19:24:51.850801010 -0300
+++ hostap-patched/src/ap/hw_features.c	2024-10-21 20:19:31.977210654 -0300
@@ -567,7 +567,7 @@ static int ieee80211n_check_40mhz(struct
 	int ret;
 
 	/* Check that HT40 is used and PRI / SEC switch is allowed */
-	if (!iface->conf->secondary_channel || iface->conf->no_pri_sec_switch)
+	if (!iface->conf->secondary_channel || iface->conf->no_pri_sec_switch || iface->conf->noscan)
 		return 0;
 
 	hostapd_set_state(iface, HAPD_IFACE_HT_SCAN);
@@ -1048,7 +1048,7 @@ static int hostapd_is_usable_chans(struc
 	if (!hostapd_is_usable_punct_bitmap(iface))
 		return 0;
 
-	if (!iface->conf->secondary_channel)
+	if (!iface->conf->secondary_channel || iface->conf->noscan)
 		return 1;
 
 	err = hostapd_is_usable_chan(iface, iface->freq +
--- hostap/src/ap/ieee802_11_ht.c	2024-10-21 19:24:51.860801005 -0300
+++ hostap-patched/src/ap/ieee802_11_ht.c	2024-10-21 19:56:06.060889887 -0300
@@ -269,6 +269,8 @@ void hostapd_2040_coex_action(struct hos
 			   "Ignore 20/40 BSS Coexistence Management frame since 40 MHz capability is not enabled");
 		return;
 	}
+        if (iface->conf->noscan)
+            return;
 
 	if (len < IEEE80211_HDRLEN + 2 + sizeof(*bc_ie)) {
 		wpa_printf(MSG_DEBUG,
@@ -429,6 +431,8 @@ void ht40_intolerant_add(struct hostapd_
 {
 	if (iface->current_mode->mode != HOSTAPD_MODE_IEEE80211G)
 		return;
+        if (iface->conf->noscan)
+            return;
 
 	wpa_printf(MSG_INFO, "HT: Forty MHz Intolerant is set by STA " MACSTR
 		   " in Association Request", MAC2STR(sta->addr));
